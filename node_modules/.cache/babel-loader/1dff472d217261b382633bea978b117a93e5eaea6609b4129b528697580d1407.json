{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, Timestamp, doc, deleteDoc, where, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth';\n\n// Firebase yapılandırması\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBaLfRR0TSVg6QqvFY4tLNJJ1F5c4l92kI\",\n  authDomain: \"vcbson-a92fc.firebaseapp.com\",\n  projectId: \"vvcbson-a92fc\",\n  storageBucket: \"vcbson-a92fc.firebasestorage.app\",\n  messagingSenderId: \"35972849762\",\n  appId: \"1:35972849762:web:40ed4e78dfdbe0de00b13b\"\n};\n\n// Firebase'i başlat\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// Google provider'ı oluştur\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\n\n// Koleksiyon isimleri\nexport const COLLECTIONS = {\n  PERSONEL: 'personel',\n  HEDEF_NISBET: 'hedef_nisbet',\n  GUNLUK_ARTIS: 'gunluk_artis',\n  USERS: 'users'\n};\n\n// Tip tanımlamaları\n\n// Kullanıcı tipi tanımı\n\n// Yardımcı fonksiyonlar\nexport async function getPersonelList(userId) {\n  try {\n    const q = query(collection(db, COLLECTIONS.PERSONEL), where('userId', '==', userId), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Personel listesi alınırken hata:', error);\n    throw new Error('Personel listesi alınamadı');\n  }\n}\nexport async function getHedefNisbetList(userId) {\n  try {\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), where('userId', '==', userId), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Hedef nisbet listesi alınırken hata:', error);\n    throw new Error('Hedef nisbet listesi alınamadı');\n  }\n}\nexport async function getGunlukArtisList(userId) {\n  try {\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), where('userId', '==', userId), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Günlük artış listesi alınırken hata:', error);\n    throw new Error('Günlük artış listesi alınamadı');\n  }\n}\nexport async function createPersonel(data) {\n  try {\n    const now = Timestamp.now();\n    const docRef = await addDoc(collection(db, COLLECTIONS.PERSONEL), {\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    });\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    };\n  } catch (error) {\n    console.error('Personel oluşturulurken hata:', error);\n    throw new Error('Personel oluşturulamadı');\n  }\n}\nexport async function createHedefNisbet(data) {\n  try {\n    const now = Timestamp.now();\n    const docRef = await addDoc(collection(db, COLLECTIONS.HEDEF_NISBET), {\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    });\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    };\n  } catch (error) {\n    console.error('Hedef nisbet oluşturulurken hata:', error);\n    throw new Error('Hedef nisbet oluşturulamadı');\n  }\n}\nexport async function createGunlukArtis(data) {\n  try {\n    const now = Timestamp.now();\n    const docRef = await addDoc(collection(db, COLLECTIONS.GUNLUK_ARTIS), {\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    });\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    };\n  } catch (error) {\n    console.error('Günlük artış oluşturulurken hata:', error);\n    throw new Error('Günlük artış oluşturulamadı');\n  }\n}\n\n// Silme fonksiyonları\nexport async function deletePersonel(id) {\n  try {\n    await deleteDoc(doc(db, COLLECTIONS.PERSONEL, id));\n  } catch (error) {\n    console.error('Personel silinirken hata:', error);\n    throw new Error('Personel silinemedi');\n  }\n}\nexport async function deleteHedefNisbet(id) {\n  try {\n    await deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, id));\n  } catch (error) {\n    console.error('Hedef nisbet silinirken hata:', error);\n    throw new Error('Hedef nisbet silinemedi');\n  }\n}\nexport async function deleteGunlukArtis(id) {\n  try {\n    await deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, id));\n  } catch (error) {\n    console.error('Günlük artış silinirken hata:', error);\n    throw new Error('Günlük artış silinemedi');\n  }\n}\n\n// Personel ID'sine göre ilgili nisbet ve artış kayıtlarını silmek için fonksiyonlar (İsteğe bağlı, Firebase'de cascade delete manuel yapılır)\n/*\r\nexport async function deleteHedefNisbetByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre hedef nisbet silinirken hata:', error);\r\n    throw new Error('İlgili hedef nisbet kayıtları silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteGunlukArtisByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre günlük artış silinirken hata:', error);\r\n    throw new Error('İlgili günlük artış kayıtları silinemedi');\r\n  }\r\n}\r\n*/\n\n// Kullanıcı oluşturma/güncelleme fonksiyonu\nexport async function createOrUpdateUser(userData) {\n  try {\n    const now = Timestamp.now();\n    const userRef = doc(db, COLLECTIONS.USERS, userData.uid);\n\n    // Kullanıcı var mı kontrol et\n    const userDoc = await getDoc(userRef);\n    if (userDoc.exists()) {\n      // Kullanıcı varsa güncelle\n      await updateDoc(userRef, {\n        ...userData,\n        lastLogin: now,\n        updatedAt: now\n      });\n      return {\n        id: userDoc.id,\n        ...userData,\n        lastLogin: now,\n        updatedAt: now\n      };\n    } else {\n      // Kullanıcı yoksa yeni oluştur\n      await setDoc(userRef, {\n        ...userData,\n        lastLogin: now,\n        createdAt: now,\n        updatedAt: now\n      });\n      return {\n        id: userData.uid,\n        ...userData,\n        lastLogin: now,\n        createdAt: now,\n        updatedAt: now\n      };\n    }\n  } catch (error) {\n    console.error('Kullanıcı oluşturulurken/güncellenirken hata:', error);\n    throw new Error('Kullanıcı işlemi başarısız oldu');\n  }\n}\n\n// Kullanıcı bilgilerini getirme fonksiyonu\nexport async function getUser(uid) {\n  try {\n    const userDoc = await getDoc(doc(db, COLLECTIONS.USERS, uid));\n    if (userDoc.exists()) {\n      return {\n        id: userDoc.id,\n        ...userDoc.data()\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error('Kullanıcı bilgileri alınırken hata:', error);\n    throw new Error('Kullanıcı bilgileri alınamadı');\n  }\n}\n\n// Auth işlemleri\nexport async function signInWithGoogle() {\n  return signInWithPopup(auth, googleProvider);\n}\nexport async function logout() {\n  await signOut(auth);\n}","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","query","orderBy","Timestamp","doc","deleteDoc","where","getDoc","updateDoc","setDoc","getAuth","GoogleAuthProvider","signInWithPopup","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","auth","googleProvider","setCustomParameters","prompt","COLLECTIONS","PERSONEL","HEDEF_NISBET","GUNLUK_ARTIS","USERS","getPersonelList","userId","q","querySnapshot","docs","map","id","data","error","console","Error","getHedefNisbetList","getGunlukArtisList","createPersonel","now","docRef","createdAt","updatedAt","createHedefNisbet","createGunlukArtis","deletePersonel","deleteHedefNisbet","deleteGunlukArtis","createOrUpdateUser","userData","userRef","uid","userDoc","exists","lastLogin","getUser","signInWithGoogle","logout"],"sources":["C:/Users/ibrahim.alisan/2025 vcb sonLogindenOnce/2025 vcb son/my-website/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, Timestamp, doc, deleteDoc, where, getDoc, updateDoc, setDoc } from 'firebase/firestore';\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth';\r\n\r\n// Firebase yapılandırması\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBaLfRR0TSVg6QqvFY4tLNJJ1F5c4l92kI\",\r\n    authDomain: \"vcbson-a92fc.firebaseapp.com\",\r\n    projectId: \"vvcbson-a92fc\",\r\n    storageBucket: \"vcbson-a92fc.firebasestorage.app\",\r\n    messagingSenderId: \"35972849762\",\r\n    appId: \"1:35972849762:web:40ed4e78dfdbe0de00b13b\"\r\n};\r\n\r\n// Firebase'i başlat\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\n// Google provider'ı oluştur\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: 'select_account'\r\n});\r\n\r\n// Koleksiyon isimleri\r\nexport const COLLECTIONS = {\r\n  PERSONEL: 'personel',\r\n  HEDEF_NISBET: 'hedef_nisbet',\r\n  GUNLUK_ARTIS: 'gunluk_artis',\r\n  USERS: 'users'\r\n} as const;\r\n\r\n// Tip tanımlamaları\r\nexport interface Personel {\r\n  id?: string;\r\n  personelNo: string;\r\n  ad: string;\r\n  soyad: string;\r\n  departman: string;\r\n  createdAt?: Timestamp;\r\n  updatedAt?: Timestamp;\r\n  userId: string;\r\n  createdBy: string;\r\n  userUid: string; // Users tablosundaki UID\r\n}\r\n\r\nexport interface HedefNisbet {\r\n  id?: string;\r\n  personelId: string;\r\n  nisbet: number;\r\n  hedefDegeri: number;\r\n  tarih: string;\r\n  createdAt?: Timestamp;\r\n  updatedAt?: Timestamp;\r\n  userId: string;\r\n  userUid: string; // Users tablosundaki UID\r\n}\r\n\r\nexport interface GunlukArtis {\r\n  id?: string;\r\n  personelId: string;\r\n  artis: number;\r\n  tarih: string;\r\n  createdAt?: Timestamp;\r\n  updatedAt?: Timestamp;\r\n  userId: string;\r\n  userUid: string; // Users tablosundaki UID\r\n}\r\n\r\n// Kullanıcı tipi tanımı\r\nexport interface User {\r\n  id?: string;\r\n  uid: string;\r\n  email: string | null;\r\n  displayName: string | null;\r\n  photoURL: string | null;\r\n  lastLogin: Timestamp;\r\n  createdAt: Timestamp;\r\n  updatedAt: Timestamp;\r\n}\r\n\r\n// Yardımcı fonksiyonlar\r\nexport async function getPersonelList(userId: string) {\r\n  try {\r\n    const q = query(\r\n      collection(db, COLLECTIONS.PERSONEL), \r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Personel));\r\n  } catch (error) {\r\n    console.error('Personel listesi alınırken hata:', error);\r\n    throw new Error('Personel listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function getHedefNisbetList(userId: string) {\r\n  try {\r\n    const q = query(\r\n      collection(db, COLLECTIONS.HEDEF_NISBET), \r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as HedefNisbet));\r\n  } catch (error) {\r\n    console.error('Hedef nisbet listesi alınırken hata:', error);\r\n    throw new Error('Hedef nisbet listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function getGunlukArtisList(userId: string) {\r\n  try {\r\n    const q = query(\r\n      collection(db, COLLECTIONS.GUNLUK_ARTIS), \r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as GunlukArtis));\r\n  } catch (error) {\r\n    console.error('Günlük artış listesi alınırken hata:', error);\r\n    throw new Error('Günlük artış listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function createPersonel(data: Omit<Personel, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.PERSONEL), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as Personel;\r\n  } catch (error) {\r\n    console.error('Personel oluşturulurken hata:', error);\r\n    throw new Error('Personel oluşturulamadı');\r\n  }\r\n}\r\n\r\nexport async function createHedefNisbet(data: Omit<HedefNisbet, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.HEDEF_NISBET), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as HedefNisbet;\r\n  } catch (error) {\r\n    console.error('Hedef nisbet oluşturulurken hata:', error);\r\n    throw new Error('Hedef nisbet oluşturulamadı');\r\n  }\r\n}\r\n\r\nexport async function createGunlukArtis(data: Omit<GunlukArtis, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.GUNLUK_ARTIS), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as GunlukArtis;\r\n  } catch (error) {\r\n    console.error('Günlük artış oluşturulurken hata:', error);\r\n    throw new Error('Günlük artış oluşturulamadı');\r\n  }\r\n}\r\n\r\n// Silme fonksiyonları\r\nexport async function deletePersonel(id: string) {\r\n  try {\r\n    await deleteDoc(doc(db, COLLECTIONS.PERSONEL, id));\r\n  } catch (error) {\r\n    console.error('Personel silinirken hata:', error);\r\n    throw new Error('Personel silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteHedefNisbet(id: string) {\r\n  try {\r\n    await deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, id));\r\n  } catch (error) {\r\n    console.error('Hedef nisbet silinirken hata:', error);\r\n    throw new Error('Hedef nisbet silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteGunlukArtis(id: string) {\r\n  try {\r\n    await deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, id));\r\n  } catch (error) {\r\n    console.error('Günlük artış silinirken hata:', error);\r\n    throw new Error('Günlük artış silinemedi');\r\n  }\r\n}\r\n\r\n// Personel ID'sine göre ilgili nisbet ve artış kayıtlarını silmek için fonksiyonlar (İsteğe bağlı, Firebase'de cascade delete manuel yapılır)\r\n/*\r\nexport async function deleteHedefNisbetByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre hedef nisbet silinirken hata:', error);\r\n    throw new Error('İlgili hedef nisbet kayıtları silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteGunlukArtisByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre günlük artış silinirken hata:', error);\r\n    throw new Error('İlgili günlük artış kayıtları silinemedi');\r\n  }\r\n}\r\n*/\r\n\r\n// Kullanıcı oluşturma/güncelleme fonksiyonu\r\nexport async function createOrUpdateUser(userData: Omit<User, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const userRef = doc(db, COLLECTIONS.USERS, userData.uid);\r\n    \r\n    // Kullanıcı var mı kontrol et\r\n    const userDoc = await getDoc(userRef);\r\n    \r\n    if (userDoc.exists()) {\r\n      // Kullanıcı varsa güncelle\r\n      await updateDoc(userRef, {\r\n        ...userData,\r\n        lastLogin: now,\r\n        updatedAt: now\r\n      });\r\n      return { id: userDoc.id, ...userData, lastLogin: now, updatedAt: now } as User;\r\n    } else {\r\n      // Kullanıcı yoksa yeni oluştur\r\n      await setDoc(userRef, {\r\n        ...userData,\r\n        lastLogin: now,\r\n        createdAt: now,\r\n        updatedAt: now\r\n      });\r\n      return { id: userData.uid, ...userData, lastLogin: now, createdAt: now, updatedAt: now } as User;\r\n    }\r\n  } catch (error) {\r\n    console.error('Kullanıcı oluşturulurken/güncellenirken hata:', error);\r\n    throw new Error('Kullanıcı işlemi başarısız oldu');\r\n  }\r\n}\r\n\r\n// Kullanıcı bilgilerini getirme fonksiyonu\r\nexport async function getUser(uid: string) {\r\n  try {\r\n    const userDoc = await getDoc(doc(db, COLLECTIONS.USERS, uid));\r\n    if (userDoc.exists()) {\r\n      return { id: userDoc.id, ...userDoc.data() } as User;\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Kullanıcı bilgileri alınırken hata:', error);\r\n    throw new Error('Kullanıcı bilgileri alınamadı');\r\n  }\r\n}\r\n\r\n// Auth işlemleri\r\nexport async function signInWithGoogle() {\r\n  return signInWithPopup(auth, googleProvider);\r\n}\r\n\r\nexport async function logout() {\r\n  await signOut(auth);\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}