{"ast":null,"code":"import _objectSpread from\"C:/Users/ibrahim.alisan/2025 vcb sonLogindenOnce/2025 vcb son/my-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{initializeApp}from'firebase/app';import{getFirestore,collection,addDoc,getDocs,query,orderBy,Timestamp,doc,deleteDoc,where,getDoc,updateDoc,setDoc}from'firebase/firestore';import{getAuth,GoogleAuthProvider,signInWithPopup,signOut}from'firebase/auth';// Firebase yapılandırması\nconst firebaseConfig={apiKey:\"AIzaSyBaLfRR0TSVg6QqvFY4tLNJJ1F5c4l92kI\",authDomain:\"vcbson-a92fc.firebaseapp.com\",projectId:\"vcbson-a92fc\",storageBucket:\"vcbson-a92fc.appspot.com\",messagingSenderId:\"35972849762\",appId:\"1:35972849762:web:40ed4e78dfdbe0de00b13b\",measurementId:\"G-2NLD6Q2NYB\"};// Firebase'i başlat\nconst app=initializeApp(firebaseConfig);const db=getFirestore(app);const auth=getAuth(app);// Koleksiyon isimleri\nexport const COLLECTIONS={PERSONEL:'personel',HEDEF_NISBET:'hedef_nisbet',GUNLUK_ARTIS:'gunluk_artis',USERS:'users'};// Tip tanımlamaları\n// Kullanıcı tipi tanımı\n// Yardımcı fonksiyonlar\nexport async function getPersonelList(userId){try{const q=query(collection(db,COLLECTIONS.PERSONEL),where('userId','==',userId),orderBy('createdAt','desc'));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error('Personel listesi alınırken hata:',error);throw new Error('Personel listesi alınamadı');}}export async function getHedefNisbetList(userId){try{const q=query(collection(db,COLLECTIONS.HEDEF_NISBET),where('userId','==',userId),orderBy('createdAt','desc'));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error('Hedef nisbet listesi alınırken hata:',error);throw new Error('Hedef nisbet listesi alınamadı');}}export async function getGunlukArtisList(userId){try{const q=query(collection(db,COLLECTIONS.GUNLUK_ARTIS),where('userId','==',userId),orderBy('createdAt','desc'));const querySnapshot=await getDocs(q);return querySnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));}catch(error){console.error('Günlük artış listesi alınırken hata:',error);throw new Error('Günlük artış listesi alınamadı');}}export async function createPersonel(data){try{const now=Timestamp.now();const docRef=await addDoc(collection(db,COLLECTIONS.PERSONEL),_objectSpread(_objectSpread({},data),{},{createdAt:now,updatedAt:now}));return _objectSpread(_objectSpread({id:docRef.id},data),{},{createdAt:now,updatedAt:now});}catch(error){console.error('Personel oluşturulurken hata:',error);throw new Error('Personel oluşturulamadı');}}export async function createHedefNisbet(data){try{const now=Timestamp.now();const docRef=await addDoc(collection(db,COLLECTIONS.HEDEF_NISBET),_objectSpread(_objectSpread({},data),{},{createdAt:now,updatedAt:now}));return _objectSpread(_objectSpread({id:docRef.id},data),{},{createdAt:now,updatedAt:now});}catch(error){console.error('Hedef nisbet oluşturulurken hata:',error);throw new Error('Hedef nisbet oluşturulamadı');}}export async function createGunlukArtis(data){try{const now=Timestamp.now();const docRef=await addDoc(collection(db,COLLECTIONS.GUNLUK_ARTIS),_objectSpread(_objectSpread({},data),{},{createdAt:now,updatedAt:now}));return _objectSpread(_objectSpread({id:docRef.id},data),{},{createdAt:now,updatedAt:now});}catch(error){console.error('Günlük artış oluşturulurken hata:',error);throw new Error('Günlük artış oluşturulamadı');}}// Silme fonksiyonları\nexport async function deletePersonel(id){try{await deleteDoc(doc(db,COLLECTIONS.PERSONEL,id));}catch(error){console.error('Personel silinirken hata:',error);throw new Error('Personel silinemedi');}}export async function deleteHedefNisbet(id){try{await deleteDoc(doc(db,COLLECTIONS.HEDEF_NISBET,id));}catch(error){console.error('Hedef nisbet silinirken hata:',error);throw new Error('Hedef nisbet silinemedi');}}export async function deleteGunlukArtis(id){try{await deleteDoc(doc(db,COLLECTIONS.GUNLUK_ARTIS,id));}catch(error){console.error('Günlük artış silinirken hata:',error);throw new Error('Günlük artış silinemedi');}}// Personel ID'sine göre ilgili nisbet ve artış kayıtlarını silmek için fonksiyonlar (İsteğe bağlı, Firebase'de cascade delete manuel yapılır)\n/*\r\nexport async function deleteHedefNisbetByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre hedef nisbet silinirken hata:', error);\r\n    throw new Error('İlgili hedef nisbet kayıtları silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteGunlukArtisByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre günlük artış silinirken hata:', error);\r\n    throw new Error('İlgili günlük artış kayıtları silinemedi');\r\n  }\r\n}\r\n*/// Kullanıcı oluşturma/güncelleme fonksiyonu\nexport async function createOrUpdateUser(userData){try{const now=Timestamp.now();const userRef=doc(db,COLLECTIONS.USERS,userData.uid);// Kullanıcı var mı kontrol et\nconst userDoc=await getDoc(userRef);if(userDoc.exists()){// Kullanıcı varsa güncelle\nawait updateDoc(userRef,_objectSpread(_objectSpread({},userData),{},{lastLogin:now,updatedAt:now}));return _objectSpread(_objectSpread({id:userDoc.id},userData),{},{lastLogin:now,updatedAt:now});}else{// Kullanıcı yoksa yeni oluştur\nawait setDoc(userRef,_objectSpread(_objectSpread({},userData),{},{lastLogin:now,createdAt:now,updatedAt:now}));return _objectSpread(_objectSpread({id:userData.uid},userData),{},{lastLogin:now,createdAt:now,updatedAt:now});}}catch(error){console.error('Kullanıcı oluşturulurken/güncellenirken hata:',error);throw new Error('Kullanıcı işlemi başarısız oldu');}}// Kullanıcı bilgilerini getirme fonksiyonu\nexport async function getUser(uid){try{const userDoc=await getDoc(doc(db,COLLECTIONS.USERS,uid));if(userDoc.exists()){return _objectSpread({id:userDoc.id},userDoc.data());}return null;}catch(error){console.error('Kullanıcı bilgileri alınırken hata:',error);throw new Error('Kullanıcı bilgileri alınamadı');}}// Auth işlemleri\nexport async function signInWithGoogle(){const provider=new GoogleAuthProvider();return signInWithPopup(auth,provider);}export async function logout(){await signOut(auth);}","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","query","orderBy","Timestamp","doc","deleteDoc","where","getDoc","updateDoc","setDoc","getAuth","GoogleAuthProvider","signInWithPopup","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","auth","COLLECTIONS","PERSONEL","HEDEF_NISBET","GUNLUK_ARTIS","USERS","getPersonelList","userId","q","querySnapshot","docs","map","_objectSpread","id","data","error","console","Error","getHedefNisbetList","getGunlukArtisList","createPersonel","now","docRef","createdAt","updatedAt","createHedefNisbet","createGunlukArtis","deletePersonel","deleteHedefNisbet","deleteGunlukArtis","createOrUpdateUser","userData","userRef","uid","userDoc","exists","lastLogin","getUser","signInWithGoogle","provider","logout"],"sources":["C:/Users/ibrahim.alisan/2025 vcb sonLogindenOnce/2025 vcb son/my-website/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, Timestamp, doc, deleteDoc, where, getDoc, updateDoc, setDoc } from 'firebase/firestore';\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut } from 'firebase/auth';\r\n\r\n// Firebase yapılandırması\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBaLfRR0TSVg6QqvFY4tLNJJ1F5c4l92kI\",\r\n    authDomain: \"vcbson-a92fc.firebaseapp.com\",\r\n    projectId: \"vcbson-a92fc\",\r\n    storageBucket: \"vcbson-a92fc.appspot.com\",\r\n    messagingSenderId: \"35972849762\",\r\n    appId: \"1:35972849762:web:40ed4e78dfdbe0de00b13b\",\r\n    measurementId: \"G-2NLD6Q2NYB\"\r\n};\r\n\r\n// Firebase'i başlat\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\n// Koleksiyon isimleri\r\nexport const COLLECTIONS = {\r\n  PERSONEL: 'personel',\r\n  HEDEF_NISBET: 'hedef_nisbet',\r\n  GUNLUK_ARTIS: 'gunluk_artis',\r\n  USERS: 'users'\r\n} as const;\r\n\r\n// Tip tanımlamaları\r\nexport interface Personel {\r\n  id?: string;\r\n  personelNo: string;\r\n  ad: string;\r\n  soyad: string;\r\n  departman: string;\r\n  createdAt?: Timestamp;\r\n  updatedAt?: Timestamp;\r\n  userId: string;\r\n  createdBy: string;\r\n  userUid: string; // Users tablosundaki UID\r\n}\r\n\r\nexport interface HedefNisbet {\r\n  id?: string;\r\n  personelId: string;\r\n  nisbet: number;\r\n  hedefDegeri: number;\r\n  tarih: string;\r\n  createdAt?: Timestamp;\r\n  updatedAt?: Timestamp;\r\n  userId: string;\r\n  userUid: string; // Users tablosundaki UID\r\n}\r\n\r\nexport interface GunlukArtis {\r\n  id?: string;\r\n  personelId: string;\r\n  artis: number;\r\n  tarih: string;\r\n  createdAt?: Timestamp;\r\n  updatedAt?: Timestamp;\r\n  userId: string;\r\n  userUid: string; // Users tablosundaki UID\r\n}\r\n\r\n// Kullanıcı tipi tanımı\r\nexport interface User {\r\n  id?: string;\r\n  uid: string;\r\n  email: string | null;\r\n  displayName: string | null;\r\n  photoURL: string | null;\r\n  lastLogin: Timestamp;\r\n  createdAt: Timestamp;\r\n  updatedAt: Timestamp;\r\n}\r\n\r\n// Yardımcı fonksiyonlar\r\nexport async function getPersonelList(userId: string) {\r\n  try {\r\n    const q = query(\r\n      collection(db, COLLECTIONS.PERSONEL), \r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Personel));\r\n  } catch (error) {\r\n    console.error('Personel listesi alınırken hata:', error);\r\n    throw new Error('Personel listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function getHedefNisbetList(userId: string) {\r\n  try {\r\n    const q = query(\r\n      collection(db, COLLECTIONS.HEDEF_NISBET), \r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as HedefNisbet));\r\n  } catch (error) {\r\n    console.error('Hedef nisbet listesi alınırken hata:', error);\r\n    throw new Error('Hedef nisbet listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function getGunlukArtisList(userId: string) {\r\n  try {\r\n    const q = query(\r\n      collection(db, COLLECTIONS.GUNLUK_ARTIS), \r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as GunlukArtis));\r\n  } catch (error) {\r\n    console.error('Günlük artış listesi alınırken hata:', error);\r\n    throw new Error('Günlük artış listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function createPersonel(data: Omit<Personel, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.PERSONEL), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as Personel;\r\n  } catch (error) {\r\n    console.error('Personel oluşturulurken hata:', error);\r\n    throw new Error('Personel oluşturulamadı');\r\n  }\r\n}\r\n\r\nexport async function createHedefNisbet(data: Omit<HedefNisbet, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.HEDEF_NISBET), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as HedefNisbet;\r\n  } catch (error) {\r\n    console.error('Hedef nisbet oluşturulurken hata:', error);\r\n    throw new Error('Hedef nisbet oluşturulamadı');\r\n  }\r\n}\r\n\r\nexport async function createGunlukArtis(data: Omit<GunlukArtis, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.GUNLUK_ARTIS), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as GunlukArtis;\r\n  } catch (error) {\r\n    console.error('Günlük artış oluşturulurken hata:', error);\r\n    throw new Error('Günlük artış oluşturulamadı');\r\n  }\r\n}\r\n\r\n// Silme fonksiyonları\r\nexport async function deletePersonel(id: string) {\r\n  try {\r\n    await deleteDoc(doc(db, COLLECTIONS.PERSONEL, id));\r\n  } catch (error) {\r\n    console.error('Personel silinirken hata:', error);\r\n    throw new Error('Personel silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteHedefNisbet(id: string) {\r\n  try {\r\n    await deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, id));\r\n  } catch (error) {\r\n    console.error('Hedef nisbet silinirken hata:', error);\r\n    throw new Error('Hedef nisbet silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteGunlukArtis(id: string) {\r\n  try {\r\n    await deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, id));\r\n  } catch (error) {\r\n    console.error('Günlük artış silinirken hata:', error);\r\n    throw new Error('Günlük artış silinemedi');\r\n  }\r\n}\r\n\r\n// Personel ID'sine göre ilgili nisbet ve artış kayıtlarını silmek için fonksiyonlar (İsteğe bağlı, Firebase'de cascade delete manuel yapılır)\r\n/*\r\nexport async function deleteHedefNisbetByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.HEDEF_NISBET, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre hedef nisbet silinirken hata:', error);\r\n    throw new Error('İlgili hedef nisbet kayıtları silinemedi');\r\n  }\r\n}\r\n\r\nexport async function deleteGunlukArtisByPersonelId(personelId: string) {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), where('personelId', '==', personelId));\r\n    const querySnapshot = await getDocs(q);\r\n    const deletePromises = querySnapshot.docs.map(d => deleteDoc(doc(db, COLLECTIONS.GUNLUK_ARTIS, d.id)));\r\n    await Promise.all(deletePromises);\r\n  } catch (error) {\r\n    console.error('Personel ID'sine göre günlük artış silinirken hata:', error);\r\n    throw new Error('İlgili günlük artış kayıtları silinemedi');\r\n  }\r\n}\r\n*/\r\n\r\n// Kullanıcı oluşturma/güncelleme fonksiyonu\r\nexport async function createOrUpdateUser(userData: Omit<User, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const userRef = doc(db, COLLECTIONS.USERS, userData.uid);\r\n    \r\n    // Kullanıcı var mı kontrol et\r\n    const userDoc = await getDoc(userRef);\r\n    \r\n    if (userDoc.exists()) {\r\n      // Kullanıcı varsa güncelle\r\n      await updateDoc(userRef, {\r\n        ...userData,\r\n        lastLogin: now,\r\n        updatedAt: now\r\n      });\r\n      return { id: userDoc.id, ...userData, lastLogin: now, updatedAt: now } as User;\r\n    } else {\r\n      // Kullanıcı yoksa yeni oluştur\r\n      await setDoc(userRef, {\r\n        ...userData,\r\n        lastLogin: now,\r\n        createdAt: now,\r\n        updatedAt: now\r\n      });\r\n      return { id: userData.uid, ...userData, lastLogin: now, createdAt: now, updatedAt: now } as User;\r\n    }\r\n  } catch (error) {\r\n    console.error('Kullanıcı oluşturulurken/güncellenirken hata:', error);\r\n    throw new Error('Kullanıcı işlemi başarısız oldu');\r\n  }\r\n}\r\n\r\n// Kullanıcı bilgilerini getirme fonksiyonu\r\nexport async function getUser(uid: string) {\r\n  try {\r\n    const userDoc = await getDoc(doc(db, COLLECTIONS.USERS, uid));\r\n    if (userDoc.exists()) {\r\n      return { id: userDoc.id, ...userDoc.data() } as User;\r\n    }\r\n    return null;\r\n  } catch (error) {\r\n    console.error('Kullanıcı bilgileri alınırken hata:', error);\r\n    throw new Error('Kullanıcı bilgileri alınamadı');\r\n  }\r\n}\r\n\r\n// Auth işlemleri\r\nexport async function signInWithGoogle() {\r\n  const provider = new GoogleAuthProvider();\r\n  return signInWithPopup(auth, provider);\r\n}\r\n\r\nexport async function logout() {\r\n  await signOut(auth);\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}