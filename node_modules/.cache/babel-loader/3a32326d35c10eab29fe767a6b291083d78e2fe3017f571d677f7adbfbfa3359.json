{"ast":null,"code":"import _objectSpread from\"C:/Users/ibrahim.alisan/2025 vcb sonLogindenOnce/2025 vcb son/my-website/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Container,Typography,Box,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Button,Dialog,DialogTitle,DialogContent,DialogActions,TextField,Alert,Snackbar,Checkbox}from'@mui/material';import{createPersonel,createHedefNisbet,createGunlukArtis,deletePersonel}from'../lib/firebase';import{getAuth,onAuthStateChanged}from'firebase/auth';import{Timestamp}from'firebase/firestore';import*as XLSX from'xlsx';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Başlıklar görsele göre güncellendi\nconst TABLE_HEADERS=['PersonelNO','FAALİYET TİP','AD SOYAD','TİP','TOPLAM','HEDEF','HEDEF NİSBETİ'];function DataTablePage(_ref){let{rows}=_ref;const[user,setUser]=useState(null);const[open,setOpen]=useState(false);// Tek veri ekleme dialogu\nconst[bulkOpen,setBulkOpen]=useState(false);// Toplu veri ekleme dialogu\nconst[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[snackbarOpen,setSnackbarOpen]=useState(false);const[snackbarMessage,setSnackbarMessage]=useState('');const[newRow,setNewRow]=useState({personelNo:'',// Yeni eklenen personelNo alanı\nad:'',soyad:'',departman:'',nisbet:'',artis:'',tarih:new Date().toISOString().split('T')[0]});const[bulkData,setBulkData]=useState('');const[selectedRows,setSelectedRows]=useState([]);// Seçili satırların ID'leri\n// Toplu yükleme için tarih state'i eklendi\nconst[bulkUploadDate,setBulkUploadDate]=useState(new Date().toISOString().split('T')[0]);const[file,setFile]=useState(null);useEffect(()=>{const auth=getAuth();const unsubscribe=onAuthStateChanged(auth,user=>{console.log('DataTablePage - Auth state changed:',user===null||user===void 0?void 0:user.uid);setUser(user);});return()=>unsubscribe();},[]);useEffect(()=>{console.log('DataTablePage - Received rows:',rows);},[rows]);const handleAddRow=async()=>{if(!user){setError('Kullanıcı girişi yapılmamış. Lütfen tekrar giriş yapın.');setSnackbarOpen(true);return;}if(!newRow.personelNo||!newRow.ad||!newRow.soyad||!newRow.departman){setError('Lütfen tüm zorunlu alanları doldurun.');setSnackbarOpen(true);return;}try{setLoading(true);setError(null);// Once personel olustur\nconst personel=await createPersonel({userId:user.uid,personelNo:newRow.personelNo,ad:newRow.ad,soyad:newRow.soyad,departman:newRow.departman,createdBy:user.uid,userUid:user.uid});// Sonra hedef nisbet olustur\nawait createHedefNisbet({userId:user.uid,personelId:personel.id,nisbet:parseFloat(newRow.nisbet.replace('%','').replace(',','.'))||0,hedefDegeri:parseFloat(newRow.artis.replace(',','.'))||0,tarih:newRow.tarih,userUid:user.uid});// Son olarak gunluk artis olustur\nawait createGunlukArtis({userId:user.uid,personelId:personel.id,artis:parseFloat(newRow.artis.replace(',','.'))||0,tarih:newRow.tarih,userUid:user.uid});setOpen(false);setNewRow({personelNo:'',ad:'',soyad:'',departman:'',nisbet:'',artis:'',tarih:new Date().toISOString().split('T')[0]});// Sayfayi yenile\nwindow.location.reload();}catch(error){console.error('Tek veri eklenirken hata olustu:',error);setError('Veri eklenirken bir hata oluştu. Lütfen tüm alanları kontrol edip tekrar deneyin.');setSnackbarOpen(true);}finally{setLoading(false);}};const readExcelFile=file=>{return new Promise((resolve,reject)=>{const reader=new FileReader();reader.onload=e=>{try{var _e$target;const data=(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.result;const workbook=XLSX.read(data,{type:'binary'});resolve(workbook);}catch(error){reject(error);}};reader.onerror=error=>reject(error);reader.readAsBinaryString(file);});};const handleBulkAdd=async()=>{if(!user){setError('Kullanıcı girişi yapılmamış. Lütfen tekrar giriş yapın.');setSnackbarOpen(true);return;}if(!bulkData.trim()){setError('Lütfen yüklenecek verileri girin.');setSnackbarOpen(true);return;}try{setLoading(true);setError(null);setSnackbarOpen(false);// Verileri satırlara böl\nconst lines=bulkData.split('\\n').map(line=>line.trim()).filter(line=>line.length>0);// Her satır için veri ekle\nfor(const line of lines){const values=line.split('\\t');if(values.length<4)continue;// Eksik veri içeren satırları atla\nconst[personelNo,faaliyetTip,adSoyad,tip,toplam,hedefDegeri,hedefNisbeti]=values;const[ad,soyad]=adSoyad.split(' ',2);if(!personelNo||!ad||!soyad)continue;// Boş alanları atla\nconst personelData={personelNo:personelNo.toString(),ad:ad.toString(),soyad:soyad.toString(),departman:\"\".concat(faaliyetTip||'',\" - \").concat(tip||'').trim(),createdAt:Timestamp.now(),updatedAt:Timestamp.now(),userId:user.uid,// Giriş yapan kullanıcının UID'si\ncreatedBy:user.uid,// Veriyi ekleyen kullanıcının UID'si\nuserUid:user.uid// Users tablosundaki UID\n};console.log('Adding personel with data:',personelData);const personel=await createPersonel(personelData);// Hedef nisbet verisi ekle\nif(hedefDegeri&&hedefNisbeti){await createHedefNisbet({userId:user.uid,personelId:personel.id,nisbet:parseFloat(hedefNisbeti.replace('%','').replace(',','.'))||0,hedefDegeri:parseFloat(hedefDegeri.replace(',','.'))||0,tarih:bulkUploadDate,userUid:user.uid// Users tablosundaki UID\n});}// Günlük artış verisi ekle\nif(toplam){await createGunlukArtis({userId:user.uid,personelId:personel.id,artis:parseFloat(toplam.replace(',','.'))||0,tarih:bulkUploadDate,userUid:user.uid// Users tablosundaki UID\n});}}setSnackbarMessage('Veriler başarıyla eklendi');setSnackbarOpen(true);setBulkOpen(false);setBulkData('');window.location.reload();// Sayfayı yenile\n}catch(error){console.error('Toplu veri ekleme hatası:',error);setError(error instanceof Error?error.message:'Veriler eklenirken bir hata oluştu');setSnackbarOpen(true);}finally{setLoading(false);}};const handleCheckboxClick=id=>{setSelectedRows(prevSelected=>prevSelected.includes(id)?prevSelected.filter(rowId=>rowId!==id):[...prevSelected,id]);};const handleSelectAllClick=()=>{if(selectedRows.length===rows.length){setSelectedRows([]);}else{// ID sütununu kullanarak tüm satırları seç\nsetSelectedRows(rows.map(row=>row[0]).filter(id=>id!==''));}};const handleDeleteSelected=async()=>{if(selectedRows.length===0)return;if(window.confirm(\"\".concat(selectedRows.length,\" adet kayd\\u0131 silmek istedi\\u011Finize emin misiniz?\"))){setLoading(true);setError(null);const failedDeletes=[];for(const id of selectedRows){try{// Personel kaydını siliyoruz. İlgili hedef nisbet ve günlük artış kayıtlarının da silinmesi gerekirse,\n// bu ID'lere göre ilgili koleksiyonlarda arama yapılıp silinmelidir (Firebase cascade delete desteklemez).\nawait deletePersonel(id);// İlgili nisbet ve artış kayıtlarını da silmek için ek fonksiyonlar çağrılabilir.\n// Örneğin: await deleteHedefNisbetByPersonelId(id); await deleteGunlukArtisByPersonelId(id);\n}catch(deleteError){console.error(\"Kayit silinirken hata olustu: \".concat(id),deleteError);failedDeletes.push({id,error:deleteError});}}setLoading(false);setSelectedRows([]);// Seçimi temizle\nif(failedDeletes.length>0){setError(\"\".concat(failedDeletes.length,\" adet kayit silinemedi. Konsolu kontrol edin.\"));setSnackbarOpen(true);}else{alert('Secilen kayitlar basariyla silindi.');}// Silme işleminden sonra sayfayı yenile\nwindow.location.reload();}};const handleCloseSnackbar=()=>{setSnackbarOpen(false);};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{mt:4},children:[/*#__PURE__*/_jsxs(Box,{sx:{p:{xs:1,sm:3}},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,sx:{fontSize:{xs:20,sm:24,md:32},mb:{xs:2,sm:3}},children:\"Veri Tablosu\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3,display:'flex',gap:2,flexWrap:'wrap'},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>setOpen(true),disabled:loading,children:loading?'Ekleniyor...':'Yeni Tek Veri Ekle'}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:()=>setBulkOpen(true),disabled:loading,children:\"Toplu Veri Y\\xFCkle\"}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"error\",onClick:handleDeleteSelected,disabled:selectedRows.length===0||loading,children:[\"Se\\xE7ilenleri Sil (\",selectedRows.length,\")\"]})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,sx:{overflowX:'auto'},children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{indeterminate:selectedRows.length>0&&selectedRows.length<rows.length,checked:rows.length>0&&selectedRows.length===rows.length,onChange:handleSelectAllClick,disabled:loading||rows.length===0})}),TABLE_HEADERS.map((header,index)=>/*#__PURE__*/_jsx(TableCell,{children:header},index))]})}),/*#__PURE__*/_jsx(TableBody,{children:rows.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:TABLE_HEADERS.length+1,align:\"center\",children:loading?'Yükleniyor...':'Henüz veri bulunmuyor'})}):rows.map((row,index)=>{const rowId=row[0];const isItemSelected=selectedRows.includes(rowId);return/*#__PURE__*/_jsxs(TableRow,{selected:isItemSelected,children:[/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{checked:isItemSelected,onClick:()=>handleCheckboxClick(rowId),disabled:loading})}),/*#__PURE__*/_jsx(TableCell,{children:row[1]||''}),/*#__PURE__*/_jsx(TableCell,{children:row[2]||''}),/*#__PURE__*/_jsx(TableCell,{children:row[3]||''}),/*#__PURE__*/_jsx(TableCell,{children:row[4]||''}),/*#__PURE__*/_jsx(TableCell,{children:row[5]||''}),/*#__PURE__*/_jsx(TableCell,{children:row[6]||''}),/*#__PURE__*/_jsx(TableCell,{children:row[7]||''})]},index);})})]})})]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:()=>!loading&&setOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Yeni Veri Ekle\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2,pt:2},children:[/*#__PURE__*/_jsx(TextField,{label:\"Personel No\",value:newRow.personelNo,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{personelNo:e.target.value})),fullWidth:true,disabled:loading}),/*#__PURE__*/_jsx(TextField,{label:\"Ad\",value:newRow.ad,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{ad:e.target.value})),fullWidth:true,disabled:loading}),/*#__PURE__*/_jsx(TextField,{label:\"Soyad\",value:newRow.soyad,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{soyad:e.target.value})),fullWidth:true,disabled:loading}),/*#__PURE__*/_jsx(TextField,{label:\"Departman\",value:newRow.departman,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{departman:e.target.value})),fullWidth:true,disabled:loading}),/*#__PURE__*/_jsx(TextField,{label:\"Hedef\",type:\"number\",value:newRow.nisbet,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{nisbet:e.target.value})),fullWidth:true,disabled:loading}),/*#__PURE__*/_jsx(TextField,{label:\"Toplam\",type:\"number\",value:newRow.artis,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{artis:e.target.value})),fullWidth:true,disabled:loading}),/*#__PURE__*/_jsx(TextField,{label:\"Tarih\",type:\"date\",value:newRow.tarih,onChange:e=>setNewRow(_objectSpread(_objectSpread({},newRow),{},{tarih:e.target.value})),fullWidth:true,disabled:loading,InputLabelProps:{shrink:true}})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setOpen(false),disabled:loading,children:\"\\u0130ptal\"}),/*#__PURE__*/_jsx(Button,{onClick:handleAddRow,variant:\"contained\",color:\"primary\",disabled:loading,children:loading?'Ekleniyor...':'Ekle'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:bulkOpen,onClose:()=>!loading&&setBulkOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Toplu Veri Y\\xFCkle\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2,pt:2},children:[/*#__PURE__*/_jsx(TextField,{label:\"Y\\xFCkleme Tarihi\",type:\"date\",value:bulkUploadDate,onChange:e=>setBulkUploadDate(e.target.value),fullWidth:true,disabled:loading,InputLabelProps:{shrink:true},sx:{mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:2},children:\"Lutfen verileri sekme ('\\\\t') ile ayrilmis sutunlar ve satir sonu ('\\\\n') ile ayrilmis satirlar seklinde asagidaki formatta yapistirin:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",display:\"block\",sx:{mb:2,bgcolor:'grey.200',p:1,borderRadius:1},children:TABLE_HEADERS.join('\\t')}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,multiline:true,fullWidth:true,minRows:10,variant:\"outlined\",value:bulkData,onChange:e=>setBulkData(e.target.value),placeholder:TABLE_HEADERS.join('\\t')+'\\n'+TABLE_HEADERS.map((h,i)=>i===0?'örnek 123':i===6?'örnek % 1.0':\"\\xF6rnek \".concat(h)).join('\\t'),disabled:loading})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setBulkOpen(false),disabled:loading,children:\"\\u0130ptal\"}),/*#__PURE__*/_jsx(Button,{onClick:handleBulkAdd,variant:\"contained\",color:\"primary\",disabled:loading,children:loading?'Yukleniyor...':'Yukle'})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbarOpen,autoHideDuration:6000,onClose:handleCloseSnackbar,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnackbar,severity:\"error\",sx:{width:'100%'},children:error})})]});}export default DataTablePage;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Alert","Snackbar","Checkbox","createPersonel","createHedefNisbet","createGunlukArtis","deletePersonel","getAuth","onAuthStateChanged","Timestamp","XLSX","jsx","_jsx","jsxs","_jsxs","TABLE_HEADERS","DataTablePage","_ref","rows","user","setUser","open","setOpen","bulkOpen","setBulkOpen","loading","setLoading","error","setError","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","newRow","setNewRow","personelNo","ad","soyad","departman","nisbet","artis","tarih","Date","toISOString","split","bulkData","setBulkData","selectedRows","setSelectedRows","bulkUploadDate","setBulkUploadDate","file","setFile","auth","unsubscribe","console","log","uid","handleAddRow","personel","userId","createdBy","userUid","personelId","id","parseFloat","replace","hedefDegeri","window","location","reload","readExcelFile","Promise","resolve","reject","reader","FileReader","onload","e","_e$target","data","target","result","workbook","read","type","onerror","readAsBinaryString","handleBulkAdd","trim","lines","map","line","filter","length","values","faaliyetTip","adSoyad","tip","toplam","hedefNisbeti","personelData","toString","concat","createdAt","now","updatedAt","Error","message","handleCheckboxClick","prevSelected","includes","rowId","handleSelectAllClick","row","handleDeleteSelected","confirm","failedDeletes","deleteError","push","alert","handleCloseSnackbar","maxWidth","sx","mt","children","p","xs","sm","variant","gutterBottom","fontSize","md","mb","display","gap","flexWrap","color","onClick","disabled","component","overflowX","padding","indeterminate","checked","onChange","header","index","colSpan","align","isItemSelected","selected","onClose","flexDirection","pt","label","value","_objectSpread","fullWidth","InputLabelProps","shrink","bgcolor","borderRadius","join","autoFocus","multiline","minRows","placeholder","h","i","autoHideDuration","severity","width"],"sources":["C:/Users/ibrahim.alisan/2025 vcb sonLogindenOnce/2025 vcb son/my-website/src/components/DataTablePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Typography, Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Alert, Snackbar, Checkbox, TablePagination, IconButton, CircularProgress, Input } from '@mui/material';\r\nimport { Add as AddIcon, Delete as DeleteIcon, Upload as UploadIcon } from '@mui/icons-material';\r\nimport { createPersonel, createHedefNisbet, createGunlukArtis, deletePersonel } from '../lib/firebase';\r\nimport { getAuth, onAuthStateChanged, User } from 'firebase/auth';\r\nimport { Timestamp } from 'firebase/firestore';\r\nimport * as XLSX from 'xlsx';\r\n\r\ntype TableRowType = string[];\r\n\r\n// Başlıklar görsele göre güncellendi\r\nconst TABLE_HEADERS = [\r\n  'PersonelNO',\r\n  'FAALİYET TİP',\r\n  'AD SOYAD',\r\n  'TİP',\r\n  'TOPLAM',\r\n  'HEDEF',\r\n  'HEDEF NİSBETİ',\r\n];\r\n\r\nfunction DataTablePage({ rows }: { rows: TableRowType[] }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [open, setOpen] = useState(false); // Tek veri ekleme dialogu\r\n  const [bulkOpen, setBulkOpen] = useState(false); // Toplu veri ekleme dialogu\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n  const [newRow, setNewRow] = useState({\r\n    personelNo: '', // Yeni eklenen personelNo alanı\r\n    ad: '',\r\n    soyad: '',\r\n    departman: '',\r\n    nisbet: '',\r\n    artis: '',\r\n    tarih: new Date().toISOString().split('T')[0]\r\n  });\r\n  const [bulkData, setBulkData] = useState('');\r\n  const [selectedRows, setSelectedRows] = useState<string[]>([]); // Seçili satırların ID'leri\r\n  // Toplu yükleme için tarih state'i eklendi\r\n  const [bulkUploadDate, setBulkUploadDate] = useState(new Date().toISOString().split('T')[0]);\r\n  const [file, setFile] = useState<File | null>(null);\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      console.log('DataTablePage - Auth state changed:', user?.uid);\r\n      setUser(user);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('DataTablePage - Received rows:', rows);\r\n  }, [rows]);\r\n\r\n  const handleAddRow = async () => {\r\n    if (!user) {\r\n      setError('Kullanıcı girişi yapılmamış. Lütfen tekrar giriş yapın.');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (!newRow.personelNo || !newRow.ad || !newRow.soyad || !newRow.departman) {\r\n      setError('Lütfen tüm zorunlu alanları doldurun.');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Once personel olustur\r\n      const personel = await createPersonel({\r\n        userId: user.uid,\r\n        personelNo: newRow.personelNo,\r\n        ad: newRow.ad,\r\n        soyad: newRow.soyad,\r\n        departman: newRow.departman,\r\n        createdBy: user.uid,\r\n        userUid: user.uid\r\n      });\r\n\r\n      // Sonra hedef nisbet olustur\r\n      await createHedefNisbet({\r\n        userId: user.uid,\r\n        personelId: personel.id!,\r\n        nisbet: parseFloat(newRow.nisbet.replace('%', '').replace(',', '.')) || 0,\r\n        hedefDegeri: parseFloat(newRow.artis.replace(',', '.')) || 0,\r\n        tarih: newRow.tarih,\r\n        userUid: user.uid\r\n      });\r\n\r\n      // Son olarak gunluk artis olustur\r\n      await createGunlukArtis({\r\n        userId: user.uid,\r\n        personelId: personel.id!,\r\n        artis: parseFloat(newRow.artis.replace(',', '.')) || 0,\r\n        tarih: newRow.tarih,\r\n        userUid: user.uid\r\n      });\r\n\r\n      setOpen(false);\r\n      setNewRow({\r\n        personelNo: '',\r\n        ad: '',\r\n        soyad: '',\r\n        departman: '',\r\n        nisbet: '',\r\n        artis: '',\r\n        tarih: new Date().toISOString().split('T')[0]\r\n      });\r\n\r\n      // Sayfayi yenile\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.error('Tek veri eklenirken hata olustu:', error);\r\n      setError('Veri eklenirken bir hata oluştu. Lütfen tüm alanları kontrol edip tekrar deneyin.');\r\n      setSnackbarOpen(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const readExcelFile = (file: File): Promise<XLSX.WorkBook> => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const data = e.target?.result;\r\n          const workbook = XLSX.read(data, { type: 'binary' });\r\n          resolve(workbook);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      };\r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsBinaryString(file);\r\n    });\r\n  };\r\n\r\n  const handleBulkAdd = async () => {\r\n    if (!user) {\r\n      setError('Kullanıcı girişi yapılmamış. Lütfen tekrar giriş yapın.');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (!bulkData.trim()) {\r\n      setError('Lütfen yüklenecek verileri girin.');\r\n      setSnackbarOpen(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setSnackbarOpen(false);\r\n\r\n      // Verileri satırlara böl\r\n      const lines = bulkData.split('\\n').map(line => line.trim()).filter(line => line.length > 0);\r\n      \r\n      // Her satır için veri ekle\r\n      for (const line of lines) {\r\n        const values = line.split('\\t');\r\n        if (values.length < 4) continue; // Eksik veri içeren satırları atla\r\n\r\n        const [personelNo, faaliyetTip, adSoyad, tip, toplam, hedefDegeri, hedefNisbeti] = values;\r\n        const [ad, soyad] = adSoyad.split(' ', 2);\r\n\r\n        if (!personelNo || !ad || !soyad) continue; // Boş alanları atla\r\n\r\n        const personelData = {\r\n          personelNo: personelNo.toString(),\r\n          ad: ad.toString(),\r\n          soyad: soyad.toString(),\r\n          departman: `${faaliyetTip || ''} - ${tip || ''}`.trim(),\r\n          createdAt: Timestamp.now(),\r\n          updatedAt: Timestamp.now(),\r\n          userId: user.uid, // Giriş yapan kullanıcının UID'si\r\n          createdBy: user.uid, // Veriyi ekleyen kullanıcının UID'si\r\n          userUid: user.uid // Users tablosundaki UID\r\n        };\r\n\r\n        console.log('Adding personel with data:', personelData);\r\n        const personel = await createPersonel(personelData);\r\n\r\n        // Hedef nisbet verisi ekle\r\n        if (hedefDegeri && hedefNisbeti) {\r\n          await createHedefNisbet({\r\n            userId: user.uid,\r\n            personelId: personel.id!,\r\n            nisbet: parseFloat(hedefNisbeti.replace('%', '').replace(',', '.')) || 0,\r\n            hedefDegeri: parseFloat(hedefDegeri.replace(',', '.')) || 0,\r\n            tarih: bulkUploadDate,\r\n            userUid: user.uid // Users tablosundaki UID\r\n          });\r\n        }\r\n\r\n        // Günlük artış verisi ekle\r\n        if (toplam) {\r\n          await createGunlukArtis({\r\n            userId: user.uid,\r\n            personelId: personel.id!,\r\n            artis: parseFloat(toplam.replace(',', '.')) || 0,\r\n            tarih: bulkUploadDate,\r\n            userUid: user.uid // Users tablosundaki UID\r\n          });\r\n        }\r\n      }\r\n\r\n      setSnackbarMessage('Veriler başarıyla eklendi');\r\n      setSnackbarOpen(true);\r\n      setBulkOpen(false);\r\n      setBulkData('');\r\n      window.location.reload(); // Sayfayı yenile\r\n    } catch (error) {\r\n      console.error('Toplu veri ekleme hatası:', error);\r\n      setError(error instanceof Error ? error.message : 'Veriler eklenirken bir hata oluştu');\r\n      setSnackbarOpen(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxClick = (id: string) => {\r\n    setSelectedRows(prevSelected =>\r\n      prevSelected.includes(id) ? prevSelected.filter(rowId => rowId !== id) : [...prevSelected, id]\r\n    );\r\n  };\r\n\r\n  const handleSelectAllClick = () => {\r\n    if (selectedRows.length === rows.length) {\r\n      setSelectedRows([]);\r\n    } else {\r\n      // ID sütununu kullanarak tüm satırları seç\r\n      setSelectedRows(rows.map(row => row[0]).filter(id => id !== ''));\r\n    }\r\n  };\r\n\r\n  const handleDeleteSelected = async () => {\r\n    if (selectedRows.length === 0) return;\r\n\r\n    if (window.confirm(`${selectedRows.length} adet kaydı silmek istediğinize emin misiniz?`)) {\r\n      setLoading(true);\r\n      setError(null);\r\n      const failedDeletes: { id: string, error: any }[] = [];\r\n\r\n      for (const id of selectedRows) {\r\n        try {\r\n          // Personel kaydını siliyoruz. İlgili hedef nisbet ve günlük artış kayıtlarının da silinmesi gerekirse,\r\n          // bu ID'lere göre ilgili koleksiyonlarda arama yapılıp silinmelidir (Firebase cascade delete desteklemez).\r\n          await deletePersonel(id);\r\n          // İlgili nisbet ve artış kayıtlarını da silmek için ek fonksiyonlar çağrılabilir.\r\n          // Örneğin: await deleteHedefNisbetByPersonelId(id); await deleteGunlukArtisByPersonelId(id);\r\n\r\n        } catch (deleteError) {\r\n          console.error(`Kayit silinirken hata olustu: ${id}`, deleteError);\r\n          failedDeletes.push({ id, error: deleteError });\r\n        }\r\n      }\r\n\r\n      setLoading(false);\r\n      setSelectedRows([]); // Seçimi temizle\r\n\r\n      if (failedDeletes.length > 0) {\r\n        setError(`${failedDeletes.length} adet kayit silinemedi. Konsolu kontrol edin.`);\r\n        setSnackbarOpen(true);\r\n      } else {\r\n        alert('Secilen kayitlar basariyla silindi.');\r\n      }\r\n\r\n      // Silme işleminden sonra sayfayı yenile\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n      <Box sx={{ p: { xs: 1, sm: 3 } }}>\r\n        <Typography variant=\"h4\" gutterBottom sx={{ fontSize: { xs: 20, sm: 24, md: 32 }, mb: { xs: 2, sm: 3 } }}>\r\n          Veri Tablosu\r\n        </Typography>\r\n        <Box sx={{ mb: 3, display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={() => setOpen(true)}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Ekleniyor...' : 'Yeni Tek Veri Ekle'}\r\n          </Button>\r\n           <Button \r\n            variant=\"outlined\" \r\n            color=\"secondary\" \r\n            onClick={() => setBulkOpen(true)}\r\n            disabled={loading}\r\n          >\r\n            Toplu Veri Yükle\r\n          </Button>\r\n           <Button \r\n            variant=\"contained\" \r\n            color=\"error\" \r\n            onClick={handleDeleteSelected}\r\n            disabled={selectedRows.length === 0 || loading}\r\n          >\r\n            Seçilenleri Sil ({selectedRows.length})\r\n          </Button>\r\n        </Box>\r\n        <TableContainer component={Paper} sx={{ overflowX: 'auto' }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                 <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={selectedRows.length > 0 && selectedRows.length < rows.length}\r\n                      checked={rows.length > 0 && selectedRows.length === rows.length}\r\n                      onChange={handleSelectAllClick}\r\n                      disabled={loading || rows.length === 0}\r\n                    />\r\n                  </TableCell>\r\n                {TABLE_HEADERS.map((header, index) => (\r\n                  <TableCell key={index}>{header}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={TABLE_HEADERS.length + 1} align=\"center\">\r\n                    {loading ? 'Yükleniyor...' : 'Henüz veri bulunmuyor'}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                rows.map((row, index) => {\r\n                  const rowId = row[0];\r\n                  const isItemSelected = selectedRows.includes(rowId);\r\n\r\n                  return (\r\n                    <TableRow key={index} selected={isItemSelected}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          onClick={() => handleCheckboxClick(rowId)}\r\n                          disabled={loading}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>{row[1] || ''}</TableCell>\r\n                      <TableCell>{row[2] || ''}</TableCell>\r\n                      <TableCell>{row[3] || ''}</TableCell>\r\n                      <TableCell>{row[4] || ''}</TableCell>\r\n                      <TableCell>{row[5] || ''}</TableCell>\r\n                      <TableCell>{row[6] || ''}</TableCell>\r\n                      <TableCell>{row[7] || ''}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Box>\r\n\r\n      {/* Tek veri ekleme Dialogu */}\r\n      <Dialog open={open} onClose={() => !loading && setOpen(false)}>\r\n        <DialogTitle>Yeni Veri Ekle</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 2 }}>\r\n             <TextField\r\n              label=\"Personel No\"\r\n              value={newRow.personelNo}\r\n              onChange={(e) => setNewRow({ ...newRow, personelNo: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n            />\r\n            <TextField\r\n              label=\"Ad\"\r\n              value={newRow.ad}\r\n              onChange={(e) => setNewRow({ ...newRow, ad: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n            />\r\n            <TextField\r\n              label=\"Soyad\"\r\n              value={newRow.soyad}\r\n              onChange={(e) => setNewRow({ ...newRow, soyad: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n            />\r\n            <TextField\r\n              label=\"Departman\"\r\n              value={newRow.departman}\r\n              onChange={(e) => setNewRow({ ...newRow, departman: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n            />\r\n             {/* Tekli eklemede Hedef ve Günlük Artış alanlarının etiketlerini güncelleyelim */}\r\n             <TextField\r\n              label=\"Hedef\"\r\n              type=\"number\"\r\n              value={newRow.nisbet}\r\n              onChange={(e) => setNewRow({ ...newRow, nisbet: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n            />\r\n            <TextField\r\n              label=\"Toplam\"\r\n              type=\"number\"\r\n              value={newRow.artis}\r\n              onChange={(e) => setNewRow({ ...newRow, artis: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n            />\r\n            <TextField\r\n              label=\"Tarih\"\r\n              type=\"date\"\r\n              value={newRow.tarih}\r\n              onChange={(e) => setNewRow({ ...newRow, tarih: e.target.value })}\r\n              fullWidth\r\n              disabled={loading}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpen(false)} disabled={loading}>İptal</Button>\r\n          <Button onClick={handleAddRow} variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Ekleniyor...' : 'Ekle'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Toplu veri ekleme Dialogu */}\r\n      <Dialog open={bulkOpen} onClose={() => !loading && setBulkOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Toplu Veri Yükle</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 2 }}>\r\n             <TextField\r\n                label=\"Yükleme Tarihi\"\r\n                type=\"date\"\r\n                value={bulkUploadDate}\r\n                onChange={(e) => setBulkUploadDate(e.target.value)}\r\n                fullWidth\r\n                disabled={loading}\r\n                InputLabelProps={{ shrink: true }}\r\n                sx={{ mb: 2 }}\r\n              />\r\n            <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n              Lutfen verileri sekme ('\\t') ile ayrilmis sutunlar ve satir sonu ('\\n') ile ayrilmis satirlar seklinde asagidaki formatta yapistirin:\r\n            </Typography>\r\n            <Typography variant=\"caption\" display=\"block\" sx={{ mb: 2, bgcolor: 'grey.200', p: 1, borderRadius: 1 }}>\r\n              {TABLE_HEADERS.join('\\t')}\r\n            </Typography>\r\n            <TextField\r\n              autoFocus\r\n              multiline\r\n              fullWidth\r\n              minRows={10}\r\n              variant=\"outlined\"\r\n              value={bulkData}\r\n              onChange={(e) => setBulkData(e.target.value)}\r\n              placeholder={TABLE_HEADERS.join('\\t') + '\\n' + TABLE_HEADERS.map((h, i) => i === 0 ? 'örnek 123' : i === 6 ? 'örnek % 1.0' : `örnek ${h}`).join('\\t')}\r\n              disabled={loading}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setBulkOpen(false)} disabled={loading}>İptal</Button>\r\n          <Button onClick={handleBulkAdd} variant=\"contained\" color=\"primary\" disabled={loading}>\r\n            {loading ? 'Yukleniyor...' : 'Yukle'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar open={snackbarOpen} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n        <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DataTablePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}