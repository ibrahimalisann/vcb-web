{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, Timestamp } from 'firebase/firestore';\n\n// Firebase yapılandırması\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBaLfRR0TSVg6QqvFY4tLNJJ1F5c4l92kI\",\n  authDomain: \"vcbson-a92fc.firebaseapp.com\",\n  projectId: \"vcbson-a92fc\",\n  storageBucket: \"vcbson-a92fc.appspot.com\",\n  messagingSenderId: \"35972849762\",\n  appId: \"1:35972849762:web:40ed4e78dfdbe0de00b13b\",\n  measurementId: \"G-2NLD6Q2NYB\"\n};\n\n// Firebase'i başlat\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n// Koleksiyon isimleri\nexport const COLLECTIONS = {\n  PERSONEL: 'personel',\n  HEDEF_NISBET: 'hedef_nisbet',\n  GUNLUK_ARTIS: 'gunluk_artis'\n};\n\n// Tip tanımlamaları\n\n// Yardımcı fonksiyonlar\nexport async function getPersonelList() {\n  try {\n    const q = query(collection(db, COLLECTIONS.PERSONEL), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Personel listesi alınırken hata:', error);\n    throw new Error('Personel listesi alınamadı');\n  }\n}\nexport async function getHedefNisbetList() {\n  try {\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Hedef nisbet listesi alınırken hata:', error);\n    throw new Error('Hedef nisbet listesi alınamadı');\n  }\n}\nexport async function getGunlukArtisList() {\n  try {\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), orderBy('createdAt', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Günlük artış listesi alınırken hata:', error);\n    throw new Error('Günlük artış listesi alınamadı');\n  }\n}\nexport async function createPersonel(data) {\n  try {\n    const now = Timestamp.now();\n    const docRef = await addDoc(collection(db, COLLECTIONS.PERSONEL), {\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    });\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    };\n  } catch (error) {\n    console.error('Personel oluşturulurken hata:', error);\n    throw new Error('Personel oluşturulamadı');\n  }\n}\nexport async function createHedefNisbet(data) {\n  try {\n    const now = Timestamp.now();\n    const docRef = await addDoc(collection(db, COLLECTIONS.HEDEF_NISBET), {\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    });\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    };\n  } catch (error) {\n    console.error('Hedef nisbet oluşturulurken hata:', error);\n    throw new Error('Hedef nisbet oluşturulamadı');\n  }\n}\nexport async function createGunlukArtis(data) {\n  try {\n    const now = Timestamp.now();\n    const docRef = await addDoc(collection(db, COLLECTIONS.GUNLUK_ARTIS), {\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    });\n    return {\n      id: docRef.id,\n      ...data,\n      createdAt: now,\n      updatedAt: now\n    };\n  } catch (error) {\n    console.error('Günlük artış oluşturulurken hata:', error);\n    throw new Error('Günlük artış oluşturulamadı');\n  }\n}","map":{"version":3,"names":["initializeApp","getFirestore","collection","addDoc","getDocs","query","orderBy","Timestamp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","COLLECTIONS","PERSONEL","HEDEF_NISBET","GUNLUK_ARTIS","getPersonelList","q","querySnapshot","docs","map","doc","id","data","error","console","Error","getHedefNisbetList","getGunlukArtisList","createPersonel","now","docRef","createdAt","updatedAt","createHedefNisbet","createGunlukArtis"],"sources":["C:/Users/ibrahim.alisan/2025 vcb son/my-website/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, addDoc, getDocs, query, orderBy, Timestamp } from 'firebase/firestore';\r\n\r\n// Firebase yapılandırması\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBaLfRR0TSVg6QqvFY4tLNJJ1F5c4l92kI\",\r\n    authDomain: \"vcbson-a92fc.firebaseapp.com\",\r\n    projectId: \"vcbson-a92fc\",\r\n    storageBucket: \"vcbson-a92fc.appspot.com\",\r\n    messagingSenderId: \"35972849762\",\r\n    appId: \"1:35972849762:web:40ed4e78dfdbe0de00b13b\",\r\n    measurementId: \"G-2NLD6Q2NYB\"\r\n};\r\n\r\n// Firebase'i başlat\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\n// Koleksiyon isimleri\r\nexport const COLLECTIONS = {\r\n  PERSONEL: 'personel',\r\n  HEDEF_NISBET: 'hedef_nisbet',\r\n  GUNLUK_ARTIS: 'gunluk_artis'\r\n} as const;\r\n\r\n// Tip tanımlamaları\r\nexport interface Personel {\r\n  id?: string;\r\n  ad: string;\r\n  soyad: string;\r\n  departman: string;\r\n  createdAt: Timestamp;\r\n  updatedAt: Timestamp;\r\n}\r\n\r\nexport interface HedefNisbet {\r\n  id?: string;\r\n  personelId: string;\r\n  nisbet: number;\r\n  tarih: string;\r\n  createdAt: Timestamp;\r\n  updatedAt: Timestamp;\r\n}\r\n\r\nexport interface GunlukArtis {\r\n  id?: string;\r\n  personelId: string;\r\n  artis: number;\r\n  tarih: string;\r\n  createdAt: Timestamp;\r\n  updatedAt: Timestamp;\r\n}\r\n\r\n// Yardımcı fonksiyonlar\r\nexport async function getPersonelList() {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.PERSONEL), orderBy('createdAt', 'desc'));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Personel));\r\n  } catch (error) {\r\n    console.error('Personel listesi alınırken hata:', error);\r\n    throw new Error('Personel listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function getHedefNisbetList() {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.HEDEF_NISBET), orderBy('createdAt', 'desc'));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as HedefNisbet));\r\n  } catch (error) {\r\n    console.error('Hedef nisbet listesi alınırken hata:', error);\r\n    throw new Error('Hedef nisbet listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function getGunlukArtisList() {\r\n  try {\r\n    const q = query(collection(db, COLLECTIONS.GUNLUK_ARTIS), orderBy('createdAt', 'desc'));\r\n    const querySnapshot = await getDocs(q);\r\n    return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as GunlukArtis));\r\n  } catch (error) {\r\n    console.error('Günlük artış listesi alınırken hata:', error);\r\n    throw new Error('Günlük artış listesi alınamadı');\r\n  }\r\n}\r\n\r\nexport async function createPersonel(data: Omit<Personel, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.PERSONEL), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as Personel;\r\n  } catch (error) {\r\n    console.error('Personel oluşturulurken hata:', error);\r\n    throw new Error('Personel oluşturulamadı');\r\n  }\r\n}\r\n\r\nexport async function createHedefNisbet(data: Omit<HedefNisbet, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.HEDEF_NISBET), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as HedefNisbet;\r\n  } catch (error) {\r\n    console.error('Hedef nisbet oluşturulurken hata:', error);\r\n    throw new Error('Hedef nisbet oluşturulamadı');\r\n  }\r\n}\r\n\r\nexport async function createGunlukArtis(data: Omit<GunlukArtis, 'id' | 'createdAt' | 'updatedAt'>) {\r\n  try {\r\n    const now = Timestamp.now();\r\n    const docRef = await addDoc(collection(db, COLLECTIONS.GUNLUK_ARTIS), {\r\n      ...data,\r\n      createdAt: now,\r\n      updatedAt: now\r\n    });\r\n    return { id: docRef.id, ...data, createdAt: now, updatedAt: now } as GunlukArtis;\r\n  } catch (error) {\r\n    console.error('Günlük artış oluşturulurken hata:', error);\r\n    throw new Error('Günlük artış oluşturulamadı');\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}